스크립트를 작성하다 보면 유사한 동작을 하는 코드가 여러 곳에서 필요할 때가 많다.

사용자가 로그인이나 로그아웃을 했을 때 안내 메시지를 보여주는 동작같은 경우말이다.
함수는 프로그램을 거숭하는 주요 '구성요소(building block)'이다.
함수를 이용하면 중복 없이 유사한 동작을 하는 코드를 여러 번 호출할 수 있다.


- 함수 선언

함수 선언(function declaration)방식을 이용하면 함수를 만들 수 있다. 함수 선언 방식은 함수 선언문 이라고 부르기도 한다.

function shiowMessage() {
  alert('안녕');
}

function키워드, 함수 이름, 소괄호 중괄호, 소괄호 안에는 매개변수를 차례로 써주면 함수를 선언할 수 있음.

매개 변수에도 디폴트 밸류를 줄 수 있다.

function showMessage(from, text = "no text given") {
  alert( from + ": " + text );
}
showMessage("Ann"); // Ann: no text given
원래라면 Ann: undefined가 출력됐겠지만, 디폴트값을 줘서 위와같이 출력되었다.


function showMessage(from, text = anotherFunction()) {
  // anotherFunction()은 text값이 없을 때만 호출됨
  // anotherFunction()의 반환 값이 text의 값이 됨
}
이런 식으로 매개변수의 디폴트 값을 포현식으로 설정할 수도 있다.

함수 이름짓기

함수는 어떤 동작을 수행하기 위한 코드를 모아놓은 것이다.
따라서 함수의 이름은 대개 동사이다.
함수 이름은 가능한 간결하고 명확해야하며, 함수가 어떤 동작을 하는지 설명할 수 있어야 한다.
코드를 읽는 사람은 함수 이름만 보고도 함수가 어떤 기능을 하는지 힌트를 얻을 수 있게 만들어야 한다.

관습적으로
show...로 시작하는 함수는 대개 무언가를 보여주는 함수
get... 값을 반환
calc... 무언가를 계산함
create... 무언가를 생성함
check... 무언가를 확인하고 불린값을 반환함 

예시
showMessage(..)     // 메시지를 보여줌
getAge(..)          // 나이를 나타내는 값을 얻고 그 값을 반환함
calcSum(..)         // 합계를 계산하고 그 결과를 반환함
createForm(..)      // form을 생성하고 만들어진 form을 반환함
checkPermission(..) // 승인 여부를 확인하고 true나 false를 반환함


주의 : 함수는 동작 하나만 담당해야 한다.
하나의 함수는 이름에 언급되어있는 동작은 정확하게 수행해야한다. 그 외의 동작을 수행해선 안된다.

독립적인 두 개의 동작은 독립된 함수 두 개로 나누어서 수행할 수 있게 해야한다.
한 장소에서 두 동작을 동시에 필요로 하는 경우도 포함된다(이 경우는 세 번째 함수를 만들어 그곳에서 앞의 두 함수를 호출한다.)

예시

getAge 함수는 나이를 얻어오는 동작만 수행해야 합니다. alert 창에 나이를 출력해주는 동작은 이 함수에 들어가지 않는 것이 좋습니다.

createForm 함수는 form을 만들고 이를 반환하는 동작만 해야 합니다. form을 문서에 추가하는 동작이 해당 함수에 들어가 있으면 좋지 않습니다.

checkPermission 함수는 승인 여부를 확인하고 그 결과를 반환하는 동작만 해야 합니다. 승인 여부를 보여주는 메시지를 띄우는 동작이 들어가 있으면 좋지 않습니다.


함수 == 주석

함수는 간결하고 한 가지 기능만을 수행할 수 있게 만들어야한다.
함수가 길어지면 함수를 잘게 쪼갤 때가 되었다는 신호로 받아들여야 한다.
함수를 쪼개는 건 쉬운 작업은 아니다.
하지만 함수를 분리해 작성하면 많은 장점이 잇기 때문에 함수가 길어질 경우엔 함수를 분리해 작성할 것을 권유한다.

함수를 간결하게 만들면 테스트와 디버깅이 수월해진다. 그리고 함수 그 자체로 주석의 역할까지 한다.